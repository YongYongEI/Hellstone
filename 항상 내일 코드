import requests
from datetime import datetime, timedelta

# OpenWeatherMap API 키
API_KEY = 'YOUR_API_KEY'  # OpenWeatherMap API 키를 입력하세요.

# 주요 동과 위도, 경도 정의
districts = {
    "동구": {
        "효동": (36.3331, 127.4545), "판암동": (36.3337, 127.4596), "용운동": (36.3432, 127.4607),
        "대동": (36.3241, 127.4349), "자양동": (36.3454, 127.4401), "가양동": (36.349, 127.448),
        "용전동": (36.3581, 127.4352), "홍도동": (36.3533, 127.4327), "삼성동": (36.3258, 127.4413),
        "산내동": (36.2923, 127.4598)
    },
    "중구": {
        "은행동": (36.3165, 127.4238), "선화동": (36.3215, 127.4172), "대흥동": (36.317, 127.418),
        "석교동": (36.3027, 127.4291), "부사동": (36.3102, 127.4292), "오류동": (36.3141, 127.4075),
        "용두동": (36.3166, 127.4298), "태평동": (36.3021, 127.3986), "유천동": (36.3065, 127.4025),
        "문화동": (36.3073, 127.4159), "산성동": (36.2934, 127.4155), "중촌동": (36.3323, 127.4151)
    },
    "서구": {
        "복수동": (36.3007, 127.3858), "도마동": (36.3123, 127.3881), "정림동": (36.2997, 127.3798),
        "용문동": (36.342, 127.3821), "탄방동": (36.3443, 127.388), "둔산동": (36.3528, 127.3823),
        "괴정동": (36.3489, 127.3837), "내동": (36.348, 127.3645), "갈마동": (36.3518, 127.3659),
        "월평동": (36.354, 127.383), "만년동": (36.3691, 127.3722), "가수원동": (36.3005, 127.3598),
        "도안동": (36.3291, 127.3576), "관저동": (36.294, 127.3514)
    },
    "유성구": {
        "진잠동": (36.3005, 127.3221), "학하동": (36.3391, 127.3332), "원신흥동": (36.3551, 127.3224),
        "상대동": (36.3631, 127.3342), "온천동": (36.3613, 127.3413), "노은동": (36.3832, 127.3308),
        "신성동": (36.3956, 127.3633), "전민동": (36.4004, 127.3901), "관평동": (36.4061, 127.3936),
        "구즉동": (36.4254, 127.4142)
    },
    "대덕구": {
        "오정동": (36.3617, 127.4199), "대화동": (36.3756, 127.4198), "화덕동": (36.4005, 127.4287),
        "비례동": (36.3821, 127.4343), "송촌동": (36.363, 127.435), "중리동": (36.359, 127.4218),
        "법동": (36.3555, 127.4212), "신탄진동": (36.4502, 127.4234), "석봉동": (36.4334, 127.4155),
        "덕암동": (36.4405, 127.4177)
    }
}

# 내일 날짜 계산
def get_tomorrow_date():
    today = datetime.now()
    tomorrow = today + timedelta(days=1)
    return tomorrow.strftime('%Y-%m-%d')

# 날씨 데이터 가져오는 함수
def get_weather(lat, lon):
    url = f"http://api.openweathermap.org/data/2.5/forecast"
    params = {
        "lat": lat,
        "lon": lon,
        "appid": API_KEY,
        "units": "metric",  # 섭씨 사용
        "lang": "kr"
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        weather_info = []
        tomorrow_date = get_tomorrow_date()
        for item in data['list']:
            if item['dt_txt'].startswith(tomorrow_date):
                weather_info.append({
                    "시간": item['dt_txt'],
                    "날씨": item['weather'][0]['description'],
                    "온도": item['main']['temp']
                })
        return weather_info
    else:
        print(f"Error: {response.status_code}, {response.text}")
        return None

# 주요 동별 날씨 데이터 가져오기
for district, locations in districts.items():
    print(f"=== {district} ===")
    for dong, (lat, lon) in locations.items():
        print(f"동: {dong}")
        weather_data = get_weather(lat, lon)
        if weather_data:
            for entry in weather_data:
                print(entry)
        print()
